"""Add Release table

Revision ID: 85799c6918a0
Revises: 1bc708e3cc39
Create Date: 2024-10-25 16:04:30.639733

"""
import os

import github
from alembic import op
import sqlalchemy as sa
from github import Github, Auth

from app.models import Release

# revision identifiers, used by Alembic.
revision = '85799c6918a0'
down_revision = '1bc708e3cc39'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    release_table = op.create_table('release',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('release_id', sa.Integer(), nullable=True),
    sa.Column('tag_name', sa.String(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('pre_release', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('repo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['repo_id'], ['repo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_repo', schema=None) as batch_op:
        batch_op.add_column(sa.Column('process_pre_releases', sa.Boolean(), server_default=sa.text('1'), nullable=True))

    with op.batch_alter_table('repo', schema=None) as batch_op:
        batch_op.drop_column('current_tag')
        batch_op.drop_column('current_release_id')

    # ### end Alembic commands ###

    conn = op.get_bind()
    res = conn.execute(sa.text('select id from repo'))
    results = res.fetchall()
    if results:
        if os.environ.get('GITHUB_TOKEN'):
            auth = Auth.Token(os.environ.get('GITHUB_TOKEN'))
        else:
            auth = None
        github_obj = Github(auth=auth)

        release_data = []
        for repo in results:
            github_repo = github_obj.get_repo(repo.id)
            try:
                release = github_repo.get_latest_release()
                release_data.append({
                    'repo_id': repo[0],
                    'release_id': release.id,
                    'tag_name': release.tag_name,
                    'release_date': release.published_at,
                    'link': release.html_url,
                })
            except github.GithubException as e:
                # Repo has no releases yet
                if github_repo.get_tags().totalCount > 0:
                    tag = github_repo.get_tags()[0]
                    release_data.append({
                        'repo_id': repo[0],
                        'release_id': None,
                        'tag_name': tag.name,
                        'release_date': tag.last_modified_datetime,
                        'link': None,
                    })

        op.bulk_insert(release_table, release_data)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('repo', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_release_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('current_tag', sa.VARCHAR(), nullable=True))

    with op.batch_alter_table('chat_repo', schema=None) as batch_op:
        batch_op.drop_column('process_pre_releases')

    op.drop_table('release')
    # ### end Alembic commands ###
